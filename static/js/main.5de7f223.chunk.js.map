{"version":3,"sources":["utils/constants.js","components/MovieItem/MovieItem.js","components/MoviesList/MoviesList.js","components/Header/Header.js","actions/getMovies.js","services/dataService.js","actions/getGenres.js","components/App/App.js","reducers/movies.js","reducers/genres.js","reducers/index.js","store/configureStore.js","index.js"],"names":["APIKey","generateID","Math","random","toString","substr","MovieItem","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","list","genres","props","genresData","filter","el","some","f","id","genresList","map","item","react_default","a","createElement","className","name","string","imagePath","content","backdrop_path","genre_ids","title","vote_average","vote_count","release_date","overview","getGenresMoviesList","adult","getGenresList","src","concat","alt","renderGenresList","length","substring","href","Component","connect","store","MoviesList","data","console","log","results","components_MovieItem_MovieItem","_this$props","movies","isFetching","renderMoviesList","type","placeholder","aria-label","renderTemplate","Header","data-toggle","data-target","aria-controls","aria-expanded","REQUEST","REQUEST_SUCCESS","REQUEST_FAIL","getMoviesAction","page","undefined","dispatch","urlString","fetch","then","response","json","catch","error","getPopularMovies","payload","err","REQUEST1","REQUEST_SUCCESS1","REQUEST_FAIL1","getGenresAction","App","getMovies","getGenres","_this$props2","components_Header_Header","components_MoviesList_MoviesList","moviesData","initialState","rootReducer","combineReducers","state","action","objectSpread","createStore","applyMiddleware","thunk","logger","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5de7f223.chunk.js","sourcesContent":["export const APIKey = \"49a3e8d3e3d07290e14ee51a63085f42\";\r\nexport const lang = \"en-US\";\r\nexport const popularMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-popular-movies\";\r\nexport const searchMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/search/search-movies\";\r\nexport const genresMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/genres\";\r\nexport const detailsMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-movie-details\";\r\nexport const recommendationsMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-movie-recommendations\";\r\n\r\nexport const imageServerURL = \"http://image.tmdb.org/t/p/w500\";\r\n\r\nexport const generateMoviePoster = imagePath => `${imageServerURL}${imagePath}`;\r\n\r\nexport const generateID = () => {\r\n    return (\r\n        \"_\" +\r\n        Math.random()\r\n            .toString(36)\r\n            .substr(2, 9)\r\n    );\r\n};\r\n\r\nexport const cutString = string =>\r\n    string.length > 80 ? `${string.substring(0, 76)}...` : string;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { generateMoviePoster } from \"../../utils/constants\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport { cutString } from \"../../utils/constants\";\r\nimport \"./MovieItem.scss\";\r\n\r\nexport class MovieItem extends Component {\r\n    getGenresList(list) {\r\n        const { genres } = this.props;\r\n\r\n        // console.log(genres.genresData.genres);\r\n\r\n        if (genres.genresData) {\r\n            const filteredList = genres.genresData.genres.filter(function(el) {\r\n                return list.some(function(f) {\r\n                    return f === el.id;\r\n                });\r\n            });\r\n            return filteredList;\r\n        }\r\n    }\r\n\r\n    renderGenresList(genresList) {\r\n        return genresList.map(item => (\r\n            <span className=\"genre-item\" key={generateID()}>\r\n                {item.name}\r\n            </span>\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        const { content } = this.props;\r\n        const {\r\n            backdrop_path,\r\n            genre_ids,\r\n            id,\r\n            title,\r\n            vote_average,\r\n            vote_count,\r\n            release_date,\r\n            overview,\r\n            adult\r\n        } = content;\r\n\r\n        const getGenresMoviesList = this.getGenresList(genre_ids);\r\n\r\n        return (\r\n            <div className=\"col-3 movies-item\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={generateMoviePoster(backdrop_path)}\r\n                        alt=\"camera-thumb\"\r\n                        className=\"img-thumbnail movie-thumb\"\r\n                    />\r\n                </div>\r\n                <h5 className=\"movie-title\">{title}</h5>\r\n                <div className=\"movie-info\">\r\n                    <p className=\"movie-info__genres\">\r\n                        {this.renderGenresList(getGenresMoviesList)}\r\n                    </p>\r\n                    <p className=\"movie-info__description\">\r\n                        {cutString(overview)}\r\n                    </p>\r\n                    <div className=\"movie-info__vote\">\r\n                        <p>Average rating: {vote_average}</p>\r\n                        <p>Votes count: {vote_count}</p>\r\n                    </div>\r\n                    <p className=\"movie-info__date\">{release_date}</p>\r\n                    <a className=\"btn btn-success\" href=\"#\">\r\n                        Link\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        genres: store.genres\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieItem);\r\n","import React, { Component } from \"react\";\r\nimport { MovieItem } from \"../MovieItem\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport \"./MoviesList.scss\";\r\n\r\nexport class MoviesList extends Component {\r\n    renderMoviesList(data) {\r\n        console.log(data);\r\n        if (data) {\r\n            return data.results.map(item => (\r\n                <MovieItem content={item} key={generateID()}></MovieItem>\r\n            ));\r\n        } else {\r\n            return <div>There are no movies...</div>;\r\n        }\r\n    }\r\n\r\n    renderTemplate() {\r\n        const { movies, isFetching } = this.props;\r\n\r\n        if (isFetching) {\r\n            return <p className=\"loading\">Loading...</p>;\r\n        } else {\r\n            return (\r\n                <div className=\"row movies-row\">\r\n                    {this.renderMoviesList(movies)}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"movies-wrap\">\r\n                <div className=\"container\">\r\n                    <div className=\"movies-wrap-header\">\r\n                        <h3 className=\"movies-wrap-title\">Movies</h3>\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <input\r\n                                className=\"form-control mr-sm-2\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    {this.renderTemplate()}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesList;\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        Movies app\r\n                    </a>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div\r\n                        className=\"collapse navbar-collapse\"\r\n                        id=\"navbarSupportedContent\"\r\n                    >\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Home{\" \"}\r\n                                    <span className=\"sr-only\">(current)</span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Link\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import { getPopularMovies } from \"../services/dataService\";\r\n\r\nexport const REQUEST = \"REQUEST\";\r\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\r\nexport const REQUEST_FAIL = \"REQUEST_FAIL\";\r\n\r\nexport const getMoviesAction = (page = 1) => dispatch => {\r\n    dispatch({\r\n        type: REQUEST\r\n    });\r\n\r\n    getPopularMovies(page)\r\n        .then(data => {\r\n            dispatch({\r\n                type: REQUEST_SUCCESS,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import { APIKey } from \"../utils/constants\";\r\nimport { lang } from \"../utils/constants\";\r\n\r\nexport const getPopularMovies = (page = 1) => {\r\n    const urlString = `https://api.themoviedb.org/3/movie/popular?api_key=${APIKey}&language=${lang}&page=${page}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const getSimilarMovies = (page = 1, movieId) => {\r\n    const urlString = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${APIKey}&language=${lang}&page=${page}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const searchMovies = (page = 1) => {\r\n    const urlString = `https://api.themoviedb.org/3/search/movie?api_key=${APIKey}&language=${lang}&page=${page}&include_adult=false`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const getGenresList = () => {\r\n    const urlString = `https://api.themoviedb.org/3/genre/movie/list?api_key=${APIKey}&language=${lang}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n","import { getGenresList } from \"../services/dataService\";\r\n\r\nexport const REQUEST1 = \"REQUEST1\";\r\nexport const REQUEST_SUCCESS1 = \"REQUEST_SUCCESS1\";\r\nexport const REQUEST_FAIL1 = \"REQUEST_FAIL1\";\r\n\r\nexport const getGenresAction = () => dispatch => {\r\n    dispatch({\r\n        type: REQUEST1\r\n    });\r\n\r\n    getGenresList()\r\n        .then(data => {\r\n            dispatch({\r\n                type: REQUEST_SUCCESS1,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL1,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MoviesList } from \"../MoviesList\";\nimport { Header } from \"../Header\";\nimport { getMoviesAction } from \"../../actions/getMovies\";\nimport { getGenresAction } from \"../../actions/getGenres\";\nimport \"./App.scss\";\n\nexport class App extends Component {\n    componentDidMount() {\n        const { getMovies, getGenres } = this.props;\n        getGenres();\n        getMovies();\n    }\n\n    render() {\n        const { movies, page } = this.props;\n        console.log(\"movies\", movies);\n        return (\n            <div className=\"App\">\n                <Header></Header>\n                <main className=\"main\">\n                    <MoviesList\n                        // error={movies.error}\n                        isFetching={movies.isFetching}\n                        movies={movies.moviesData}\n                        page={page}\n                    ></MoviesList>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        page: store.page,\n        movies: store.movies,\n        genres: store.genres\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getMovies: page => dispatch(getMoviesAction(page)),\n        getGenres: () => dispatch(getGenresAction())\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import { REQUEST, REQUEST_SUCCESS, REQUEST_FAIL } from \"../actions/getMovies\";\r\n\r\nexport const initialState = {\r\n    moviesData: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function moviesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                moviesData: action.payload\r\n            };\r\n        case REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                moviesData: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    REQUEST1,\r\n    REQUEST_SUCCESS1,\r\n    REQUEST_FAIL1\r\n} from \"../actions/getGenres\";\r\n\r\nexport const initialState = {\r\n    genresData: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function genresReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST1:\r\n            return { ...state, isFetching: true };\r\n        case REQUEST_SUCCESS1:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                genresData: action.payload\r\n            };\r\n        case REQUEST_FAIL1:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                genresData: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { moviesReducer } from \"./movies\";\r\nimport { genresReducer } from \"./genres\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    movies: moviesReducer,\r\n    genres: genresReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { App } from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/configureStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}