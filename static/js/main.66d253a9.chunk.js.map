{"version":3,"sources":["utils/constants.js","components/MovieItem/MovieItem.js","actions/getMovies.js","services/dataService.js","reducers/movies.js","actions/getGenres.js","reducers/genres.js","actions/setPage.js","reducers/page.js","actions/getMovieById.js","reducers/movieById.js","reducers/index.js","store/configureStore.js","components/Pagination/Pagination.js","components/MoviesList/MoviesList.js","components/Header/Header.js","components/About/About.js","components/MovieFullDescription/MovieFullDescription.js","utils/routes.js","components/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["APIKey","lang","generateMoviePoster","imagePath","concat","generateID","Math","random","toString","substr","MovieItem","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","list","genres","props","genresData","filter","el","some","f","id","genresList","map","item","react_default","a","createElement","className","name","isAdult","string","content","backdrop_path","genre_ids","title","vote_average","release_date","overview","adult","getGenresMoviesList","getGenresList","movieLink","src","alt","react_router_dom","to","renderGenresList","length","substring","checkMovieForAdult","Component","connect","store","REQUEST","REQUEST_SUCCESS","REQUEST_FAIL","getMoviesAction","page","undefined","dispatch","type","urlString","fetch","then","response","json","catch","error","console","getPopularMovies","data","payload","err","initialState","moviesData","isFetching","REQUEST1","REQUEST_SUCCESS1","REQUEST_FAIL1","getGenresAction","log","SET_PAGE","REQUESTBYID","REQUESTBYID_SUCCESS","REQUESTBYID_FAIL","getMovieById","movieDetails","rootReducer","combineReducers","movies","state","action","_objectSpread","genres_objectSpread","page_objectSpread","movieById_objectSpread","createStore","applyMiddleware","thunk","logger","LEFT_PAGE","RIGHT_PAGE","range","from","step","i","push","Pagination","_this","call","gotoPage","_this$props$onPageCha","onPageChanged","currentPage","max","min","totalPages","paginationData","totalRecords","changePage","e","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","_props$totalRecords","_props$pageNeighbours","Promise","resolve","setPage","_this2","aria-label","index","href","onClick","aria-hidden","MoviesList","bind","assertThisInitialized","results","components_MovieItem_MovieItem","_this$props","getMovies","_this$props2","renderMoviesList","components_Pagination_Pagination","placeholder","renderTemplate","getGenres","Header","routes","route","exact","isExact","activeClassName","path","data-toggle","data-target","aria-controls","aria-expanded","renderNavigationMenuList","About","MovieFullDescription","match","params","getMovieDetails","homepage","original_title","poster_path","status","vote_count","isNavBar","component","NotFound","App","react_router","getGenresListAsync","handleMoviesData","Fragment","components_Header_Header","render","components_MoviesList_MoviesList","ReactDOM","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.66d253a9.chunk.js","sourcesContent":["export const APIKey = \"49a3e8d3e3d07290e14ee51a63085f42\";\r\nexport const lang = \"en-US\";\r\nexport const popularMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-popular-movies\";\r\nexport const searchMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/search/search-movies\";\r\nexport const genresMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/genres\";\r\nexport const detailsMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-movie-details\";\r\nexport const recommendationsMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-movie-recommendations\";\r\n\r\nexport const imageServerURL = \"http://image.tmdb.org/t/p/w500\";\r\n\r\nexport const generateMoviePoster = imagePath =>\r\n    imagePath\r\n        ? `${imageServerURL}${imagePath}`\r\n        : \"https://via.placeholder.com/255x150?text=Placeholder\";\r\n\r\nexport const generateID = () => {\r\n    return (\r\n        \"_\" +\r\n        Math.random()\r\n            .toString(36)\r\n            .substr(2, 9)\r\n    );\r\n};\r\n\r\nexport const cutString = string =>\r\n    string.length > 80 ? `${string.substring(0, 76)}...` : string;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { generateMoviePoster } from \"../../utils/constants\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport { cutString } from \"../../utils/constants\";\r\nimport \"./MovieItem.scss\";\r\n\r\nexport class MovieItem extends Component {\r\n    getGenresList(list) {\r\n        const { genres } = this.props;\r\n        if (genres.genresData) {\r\n            const filteredList = genres.genresData.genres.filter(function(el) {\r\n                return list.some(function(f) {\r\n                    return f === el.id;\r\n                });\r\n            });\r\n            return filteredList;\r\n        }\r\n    }\r\n\r\n    renderGenresList(genresList) {\r\n        return genresList.map(item => (\r\n            <span className=\"genre-item\" key={generateID()}>\r\n                {item.name}\r\n            </span>\r\n        ));\r\n    }\r\n\r\n    checkMovieForAdult(isAdult) {\r\n        return isAdult ? <div className=\"movie-adult\">18+</div> : \"\";\r\n    }\r\n\r\n    render() {\r\n        const { content } = this.props;\r\n        const {\r\n            backdrop_path,\r\n            genre_ids,\r\n            id,\r\n            title,\r\n            vote_average,\r\n            // vote_count,\r\n            release_date,\r\n            overview,\r\n            adult\r\n        } = content;\r\n\r\n        const getGenresMoviesList = this.getGenresList(genre_ids);\r\n        const movieLink = `/movie/${id}`;\r\n\r\n        return (\r\n            <div className=\"col-lg-3 col-md-6 col-12 movies-item\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={generateMoviePoster(backdrop_path)}\r\n                        alt=\"camera-thumb\"\r\n                        className=\"img-thumbnail movie-thumb\"\r\n                    />\r\n                </div>\r\n                <NavLink to={movieLink}>\r\n                    <h5 className=\"movie-title\">{title}</h5>\r\n                </NavLink>\r\n                <div className=\"movie-info\">\r\n                    <p className=\"movie-info__genres\">\r\n                        {this.renderGenresList(getGenresMoviesList)}\r\n                    </p>\r\n                    <p className=\"movie-info__description\">\r\n                        {cutString(overview)}\r\n                    </p>\r\n                    <div className=\"movie-info__vote\">\r\n                        <p>Average rating: {vote_average}</p>\r\n                        {/* <p>Votes count: {vote_count}</p> */}\r\n                    </div>\r\n                    <p className=\"movie-info__date\">{release_date}</p>\r\n                    <NavLink to={movieLink} className=\"btn btn-success\">\r\n                        Link\r\n                    </NavLink>\r\n                </div>\r\n                {this.checkMovieForAdult(adult)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        genres: store.genres\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieItem);\r\n","import { getPopularMovies } from \"../services/dataService\";\r\n\r\nexport const REQUEST = \"REQUEST\";\r\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\r\nexport const REQUEST_FAIL = \"REQUEST_FAIL\";\r\n\r\nexport const getMoviesAction = (page = 1) => dispatch => {\r\n    dispatch({\r\n        type: REQUEST\r\n    });\r\n\r\n    getPopularMovies(page)\r\n        .then(data => {\r\n            dispatch({\r\n                type: REQUEST_SUCCESS,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import { APIKey } from \"../utils/constants\";\r\nimport { lang } from \"../utils/constants\";\r\n\r\nexport const getPopularMovies = (page = 1) => {\r\n    const urlString = `https://api.themoviedb.org/3/movie/popular?api_key=${APIKey}&language=${lang}&page=${page}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const getSimilarMovies = (page = 1, movieId) => {\r\n    const urlString = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${APIKey}&language=${lang}&page=${page}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const searchMovies = (page = 1) => {\r\n    const urlString = `https://api.themoviedb.org/3/search/movie?api_key=${APIKey}&language=${lang}&page=${page}&include_adult=false`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const getGenresList = () => {\r\n    const urlString = `https://api.themoviedb.org/3/genre/movie/list?api_key=${APIKey}&language=${lang}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const getMovieById = id => {\r\n    const urlString = `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKey}&language=${lang}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n","import { REQUEST, REQUEST_SUCCESS, REQUEST_FAIL } from \"../actions/getMovies\";\r\n\r\nexport const initialState = {\r\n    moviesData: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function moviesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                moviesData: action.payload\r\n            };\r\n        case REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                moviesData: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { getGenresList } from \"../services/dataService\";\r\n\r\nexport const REQUEST1 = \"REQUEST1\";\r\nexport const REQUEST_SUCCESS1 = \"REQUEST_SUCCESS1\";\r\nexport const REQUEST_FAIL1 = \"REQUEST_FAIL1\";\r\n\r\nexport const getGenresAction = () => dispatch => {\r\n    dispatch({\r\n        type: REQUEST1\r\n    });\r\n\r\n    getGenresList()\r\n        .then(data => {\r\n            console.log(\"data\", data);\r\n            dispatch({\r\n                type: REQUEST_SUCCESS1,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL1,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import {\r\n    REQUEST1,\r\n    REQUEST_SUCCESS1,\r\n    REQUEST_FAIL1\r\n} from \"../actions/getGenres\";\r\n\r\nexport const initialState = {\r\n    genresData: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function genresReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST1:\r\n            return { ...state, isFetching: true };\r\n        case REQUEST_SUCCESS1:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                genresData: action.payload\r\n            };\r\n        case REQUEST_FAIL1:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                genresData: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const SET_PAGE = \"SET_PAGE\";\r\n\r\nexport const setPage = page => ({\r\n    type: SET_PAGE,\r\n    payload: page\r\n});\r\n","import { SET_PAGE } from \"../actions/setPage\";\r\n\r\nexport const initialState = {\r\n    page: 1\r\n};\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PAGE:\r\n            return { ...state, page: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { getMovieById } from \"../services/dataService\";\r\n\r\nexport const REQUESTBYID = \"REQUESTBYID\";\r\nexport const REQUESTBYID_SUCCESS = \"REQUESTBYID_SUCCESS\";\r\nexport const REQUESTBYID_FAIL = \"REQUESTBYID_FAIL\";\r\n\r\nexport const getMoviesAction = id => dispatch => {\r\n    dispatch({\r\n        type: REQUESTBYID\r\n    });\r\n\r\n    getMovieById(id)\r\n        .then(data => {\r\n            dispatch({\r\n                type: REQUESTBYID_SUCCESS,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUESTBYID_FAIL,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import {\r\n    REQUESTBYID,\r\n    REQUESTBYID_SUCCESS,\r\n    REQUESTBYID_FAIL\r\n} from \"../actions/getMovieById\";\r\n\r\nexport const initialState = {\r\n    movieDetails: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function movieDetailsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUESTBYID:\r\n            return { ...state, isFetching: true };\r\n        case REQUESTBYID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                movieDetails: action.payload\r\n            };\r\n        case REQUESTBYID_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                movieDetails: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { moviesReducer } from \"./movies\";\r\nimport { genresReducer } from \"./genres\";\r\nimport { pageReducer } from \"./page\";\r\nimport { movieDetailsReducer } from \"./movieById\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    movies: moviesReducer,\r\n    genres: genresReducer,\r\n    page: pageReducer,\r\n    movieDetails: movieDetailsReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React, { Component } from \"react\";\r\nimport { store } from \"../../store/configureStore\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setPage } from \"../../actions/setPage\";\r\nimport \"./Pagination.scss\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n\r\n    return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { totalRecords = null, pageNeighbours = 0 } = props;\r\n        this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n        this.pageNeighbours =\r\n            typeof pageNeighbours === \"number\"\r\n                ? Math.max(0, Math.min(pageNeighbours, 2))\r\n                : 0;\r\n\r\n        this.totalPages = 992;\r\n        // this.state = { currentPage: 1 };\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.gotoPage(1);\r\n    // }\r\n\r\n    changePage(page) {\r\n        return new Promise(resolve => {\r\n            store.dispatch(setPage(page));\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    gotoPage = page => {\r\n        const { onPageChanged = f => f } = this.props;\r\n\r\n        const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n        const paginationData = {\r\n            currentPage,\r\n            totalPages: this.totalPages,\r\n            totalRecords: this.totalRecords\r\n        };\r\n\r\n        this.changePage(currentPage).then(e => {\r\n            if (e) {\r\n                onPageChanged(paginationData);\r\n            }\r\n        });\r\n\r\n        // this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n    };\r\n\r\n    handleClick = (page, evt) => {\r\n        evt.preventDefault();\r\n        console.log(\"page\", page);\r\n        this.gotoPage(page);\r\n    };\r\n\r\n    handleMoveLeft = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.props.page - this.pageNeighbours * 2 - 1);\r\n    };\r\n\r\n    handleMoveRight = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.props.page + this.pageNeighbours * 2 + 1);\r\n    };\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = this.totalPages;\r\n        const currentPage = this.props.page;\r\n        const pageNeighbours = this.pageNeighbours;\r\n        const totalNumbers = this.pageNeighbours * 2 + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            let pages = [];\r\n\r\n            const leftBound = currentPage - pageNeighbours;\r\n            const rightBound = currentPage + pageNeighbours;\r\n            const beforeLastPage = totalPages - 1;\r\n\r\n            const startPage = leftBound > 2 ? leftBound : 2;\r\n            const endPage =\r\n                rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n            pages = range(startPage, endPage);\r\n\r\n            const pagesCount = pages.length;\r\n            const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n            const leftSpill = startPage > 2;\r\n            const rightSpill = endPage < beforeLastPage;\r\n\r\n            const leftSpillPage = LEFT_PAGE;\r\n            const rightSpillPage = RIGHT_PAGE;\r\n\r\n            if (leftSpill && !rightSpill) {\r\n                const extraPages = range(\r\n                    startPage - singleSpillOffset,\r\n                    startPage - 1\r\n                );\r\n                pages = [leftSpillPage, ...extraPages, ...pages];\r\n            } else if (!leftSpill && rightSpill) {\r\n                const extraPages = range(\r\n                    endPage + 1,\r\n                    endPage + singleSpillOffset\r\n                );\r\n                pages = [...pages, ...extraPages, rightSpillPage];\r\n            } else if (leftSpill && rightSpill) {\r\n                pages = [leftSpillPage, ...pages, rightSpillPage];\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n        }\r\n\r\n        return range(1, totalPages);\r\n    };\r\n\r\n    render() {\r\n        if (!this.totalRecords) return null;\r\n        if (this.totalPages === 1) return null;\r\n\r\n        const currentPage = this.props.page;\r\n        const pages = this.fetchPageNumbers();\r\n\r\n        return (\r\n            <div className=\"pagination-wrap\">\r\n                <nav aria-label=\"Pagination\">\r\n                    <ul className=\"pagination\">\r\n                        {pages.map((page, index) => {\r\n                            if (page === LEFT_PAGE)\r\n                                return (\r\n                                    <li key={index} className=\"page-item\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Previous\"\r\n                                            onClick={this.handleMoveLeft}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">\r\n                                                &laquo;\r\n                                            </span>\r\n                                            <span className=\"sr-only\">\r\n                                                Previous\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n\r\n                            if (page === RIGHT_PAGE)\r\n                                return (\r\n                                    <li key={index} className=\"page-item\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Next\"\r\n                                            onClick={this.handleMoveRight}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">\r\n                                                &raquo;\r\n                                            </span>\r\n                                            <span className=\"sr-only\">\r\n                                                Next\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n\r\n                            return (\r\n                                <li\r\n                                    key={index}\r\n                                    className={`page-item${\r\n                                        currentPage === page ? \" active\" : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <a\r\n                                        className=\"page-link\"\r\n                                        href=\"#\"\r\n                                        onClick={e => this.handleClick(page, e)}\r\n                                    >\r\n                                        {page}\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        page: store.page.page\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Pagination);\r\n\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageNeighbours: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MovieItem } from \"../MovieItem\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport { Pagination } from \"../Pagination\";\r\nimport { getMoviesAction } from \"../../actions/getMovies\";\r\nimport { getGenresAction } from \"../../actions/getGenres\";\r\nimport \"./MoviesList.scss\";\r\n\r\nexport class MoviesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onPageChanged = this.onPageChanged.bind(this);\r\n    }\r\n\r\n    renderMoviesList(data) {\r\n        if (data) {\r\n            return data.results.map(item => (\r\n                <MovieItem content={item} key={generateID()}></MovieItem>\r\n            ));\r\n        } else {\r\n            return <div>There are no movies...</div>;\r\n        }\r\n    }\r\n\r\n    onPageChanged() {\r\n        const { getMovies, page } = this.props;\r\n        getMovies(page);\r\n    }\r\n\r\n    renderTemplate() {\r\n        const { movies, isFetching } = this.props;\r\n\r\n        if (isFetching) {\r\n            return <p className=\"loading\">Loading...</p>;\r\n        } else {\r\n            return (\r\n                <div className=\"row movies-row\">\r\n                    {this.renderMoviesList(movies)}\r\n                    <Pagination\r\n                        totalRecords={20}\r\n                        pageNeighbours={1}\r\n                        onPageChanged={this.onPageChanged}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"movies-wrap\">\r\n                <div className=\"container\">\r\n                    <div className=\"movies-wrap-header\">\r\n                        <h3 className=\"movies-wrap-title\">Movies</h3>\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <input\r\n                                className=\"form-control mr-sm-2\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    {this.renderTemplate()}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        page: store.page.page\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenres: () => dispatch(getGenresAction()),\r\n        getMovies: page => dispatch(getMoviesAction(page))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MoviesList);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport \"./Header.scss\";\r\n\r\nexport class Header extends Component {\r\n    renderNavigationMenuList() {\r\n        const { routes } = this.props;\r\n\r\n        return routes.map(route => (\r\n            <li className=\"nav-item\" key={generateID()}>\r\n                <NavLink\r\n                    exact={route.isExact}\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-link\"\r\n                    to={route.path}\r\n                >\r\n                    {route.name}\r\n                </NavLink>\r\n            </li>\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <NavLink to=\"/\" className=\"navbar-brand\">\r\n                        Movies app\r\n                    </NavLink>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div\r\n                        className=\"collapse navbar-collapse\"\r\n                        id=\"navbarSupportedContent\"\r\n                    >\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {/* <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Home{\" \"}\r\n                                    <span className=\"sr-only\">(current)</span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Link\r\n                                </a>\r\n                            </li> */}\r\n\r\n                            {this.renderNavigationMenuList()}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n    routes: PropTypes.array\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./About.scss\";\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"about-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h2 className=\"section-title\">About page</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getMoviesAction } from \"../../actions/getMovieById\";\r\nimport { generateMoviePoster } from \"../../utils/constants\";\r\nimport \"./MovieFullDescription.scss\";\r\n\r\nexport class MovieFullDescription extends Component {\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const { getMovieDetails } = this.props;\r\n        getMovieDetails(id);\r\n    }\r\n\r\n    renderTemplate() {\r\n        const { movieDetails } = this.props;\r\n\r\n        if (movieDetails) {\r\n            const {\r\n                backdrop_path,\r\n                genres,\r\n                homepage,\r\n                original_title,\r\n                overview,\r\n                poster_path,\r\n                release_date,\r\n                status,\r\n                title,\r\n                vote_average,\r\n                vote_count\r\n            } = movieDetails;\r\n\r\n            return (\r\n                <div className=\"container\">\r\n                    <NavLink to=\"/\" className=\"navlink-back\">\r\n                        {`< Go back`}\r\n                    </NavLink>\r\n                    <h2 className=\"content-title\">\r\n                        {title}({original_title})\r\n                    </h2>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <img\r\n                                src={generateMoviePoster(poster_path)}\r\n                                alt=\"movie-thumb\"\r\n                                className=\"img-thumbnail movie-thumb-full\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <ul>\r\n                                <li>Genres: </li>\r\n                                <li>Releaase date: {release_date}</li>\r\n                                <li>Status: {status}</li>\r\n                                <li>Votes: {vote_count}</li>\r\n                                <li>Vote average: {vote_average}</li>\r\n                            </ul>\r\n                            <p>{overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"page-content\">\r\n                    {this.renderTemplate()}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        movieDetails: store.movieDetails.movieDetails\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getMovieDetails: id => dispatch(getMoviesAction(id))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MovieFullDescription);\r\n","import { MoviesList } from \"../components/MoviesList\";\r\nimport { About } from \"../components/About\";\r\nimport { MovieFullDescription } from \"../components/MovieFullDescription\";\r\n\r\nexport const routes = [\r\n    {\r\n        isNavBar: true,\r\n        isExact: true,\r\n        path: \"/\",\r\n        name: \"Home\",\r\n        component: MoviesList\r\n    },\r\n    {\r\n        isNavBar: true,\r\n        path: \"/about\",\r\n        name: \"About\",\r\n        component: About\r\n    },\r\n    {\r\n        isNavBar: false,\r\n        path: \"/movie/:id\",\r\n        name: \"MovieItem\",\r\n        component: MovieFullDescription\r\n    }\r\n    // {\r\n    //     path: \"/login\",\r\n    //     name: \"Login\",\r\n    //     component: Login\r\n    // }\r\n    // {\r\n    //     isNavBar: true,\r\n    //     path: \"/profile\",\r\n    //     name: \"Profile\",\r\n    //     component: Profile,\r\n    //     isPrivate: true\r\n    // },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport \"./NotFound.scss\";\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MoviesList } from \"../MoviesList\";\r\nimport { Header } from \"../Header\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { routes } from \"../../utils/routes\";\r\nimport { About } from \"../About\";\r\nimport { MovieFullDescription } from \"../MovieFullDescription\";\r\nimport { NotFound } from \"../NotFound\";\r\nimport { getMoviesAction } from \"../../actions/getMovies\";\r\nimport { getGenresAction } from \"../../actions/getGenres\";\r\nimport \"./App.scss\";\r\n\r\nexport class App extends Component {\r\n    renderSwitchContent() {\r\n        return (\r\n            <Switch>\r\n                {routes.map(route => {\r\n                    const component = route.component;\r\n                    return (\r\n                        <Route\r\n                            key={route.path}\r\n                            exact={route.isExact}\r\n                            path={route.path}\r\n                            component={component}\r\n                        />\r\n                    );\r\n                })}\r\n            </Switch>\r\n        );\r\n    }\r\n    getGenresListAsync() {\r\n        const { getGenres } = this.props;\r\n        return new Promise(resolve => {\r\n            getGenres();\r\n            resolve(true);\r\n        }).catch(error => console.error(error));\r\n    }\r\n\r\n    handleMoviesData() {\r\n        const { getMovies, page } = this.props;\r\n        this.getGenresListAsync().then(e => {\r\n            if (e) {\r\n                getMovies(page);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleMoviesData();\r\n    }\r\n\r\n    render() {\r\n        const { movies } = this.props;\r\n\r\n        return (\r\n            <Router>\r\n                <React.Fragment>\r\n                    <Header\r\n                        routes={routes.filter(route => route.isNavBar)}\r\n                    ></Header>\r\n                    <main className=\"main\">\r\n                        <Switch>\r\n                            <Route\r\n                                key=\"/\"\r\n                                path=\"/\"\r\n                                render={() => (\r\n                                    <MoviesList\r\n                                        isFetching={movies.isFetching}\r\n                                        movies={movies.moviesData}\r\n                                    />\r\n                                )}\r\n                                exact\r\n                            />\r\n                            />\r\n                            <Route\r\n                                key=\"/about\"\r\n                                path=\"/about\"\r\n                                component={About}\r\n                            />\r\n                            <Route\r\n                                key=\"/movie/:id\"\r\n                                path=\"/movie/:id\"\r\n                                component={MovieFullDescription}\r\n                            />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </main>\r\n                </React.Fragment>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        movies: store.movies,\r\n        genres: store.genres.genresData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenres: () => dispatch(getGenresAction()),\r\n        getMovies: page => dispatch(getMoviesAction(page))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { App } from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/configureStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}