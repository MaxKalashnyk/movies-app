{"version":3,"sources":["utils/constants.js","components/MovieItem/MovieItem.js","components/MoviesList/MoviesList.js","components/Header/Header.js","components/About/About.js","components/MovieFullDescription/MovieFullDescription.js","utils/routes.js","components/NotFound/NotFound.js","actions/getMovies.js","services/dataService.js","actions/getGenres.js","components/App/App.js","reducers/movies.js","reducers/genres.js","reducers/index.js","store/configureStore.js","index.js"],"names":["APIKey","generateID","Math","random","toString","substr","MovieItem","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","list","genres","props","genresData","filter","el","some","f","id","genresList","map","item","react_default","a","createElement","className","name","string","imagePath","content","backdrop_path","genre_ids","title","vote_average","vote_count","release_date","overview","getGenresMoviesList","adult","getGenresList","src","concat","alt","renderGenresList","length","substring","href","Component","connect","store","MoviesList","data","console","log","results","components_MovieItem_MovieItem","_this$props","movies","isFetching","renderMoviesList","type","placeholder","aria-label","renderTemplate","Header","routes","route","react_router_dom","exact","isExact","activeClassName","to","path","data-toggle","data-target","aria-controls","aria-expanded","renderNavigationMenuList","About","MovieFullDescription","isNavBar","component","NotFound","REQUEST","REQUEST_SUCCESS","REQUEST_FAIL","getMoviesAction","page","undefined","dispatch","urlString","fetch","then","response","json","catch","error","getPopularMovies","payload","err","REQUEST1","REQUEST_SUCCESS1","REQUEST_FAIL1","getGenresAction","App","react_router","getGenres","Promise","resolve","getMovies","getGenresListAsync","Fragment","components_Header_Header","render","components_MoviesList_MoviesList","moviesData","initialState","rootReducer","combineReducers","state","action","objectSpread","createStore","applyMiddleware","thunk","logger","ReactDOM","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9578ec2b.chunk.js","sourcesContent":["export const APIKey = \"49a3e8d3e3d07290e14ee51a63085f42\";\r\nexport const lang = \"en-US\";\r\nexport const popularMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-popular-movies\";\r\nexport const searchMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/search/search-movies\";\r\nexport const genresMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/genres\";\r\nexport const detailsMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-movie-details\";\r\nexport const recommendationsMoviesURLString =\r\n    \"https://developers.themoviedb.org/3/movies/get-movie-recommendations\";\r\n\r\nexport const imageServerURL = \"http://image.tmdb.org/t/p/w500\";\r\n\r\nexport const generateMoviePoster = imagePath =>\r\n    imagePath\r\n        ? `${imageServerURL}${imagePath}`\r\n        : \"https://via.placeholder.com/255x150?text=Placeholder\";\r\n\r\nexport const generateID = () => {\r\n    return (\r\n        \"_\" +\r\n        Math.random()\r\n            .toString(36)\r\n            .substr(2, 9)\r\n    );\r\n};\r\n\r\nexport const cutString = string =>\r\n    string.length > 80 ? `${string.substring(0, 76)}...` : string;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { generateMoviePoster } from \"../../utils/constants\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport { cutString } from \"../../utils/constants\";\r\nimport \"./MovieItem.scss\";\r\n\r\nexport class MovieItem extends Component {\r\n    getGenresList(list) {\r\n        const { genres } = this.props;\r\n\r\n        if (genres.genresData) {\r\n            const filteredList = genres.genresData.genres.filter(function(el) {\r\n                return list.some(function(f) {\r\n                    return f === el.id;\r\n                });\r\n            });\r\n            return filteredList;\r\n        }\r\n    }\r\n\r\n    renderGenresList(genresList) {\r\n        return genresList.map(item => (\r\n            <span className=\"genre-item\" key={generateID()}>\r\n                {item.name}\r\n            </span>\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        const { content } = this.props;\r\n        const {\r\n            backdrop_path,\r\n            genre_ids,\r\n            id,\r\n            title,\r\n            vote_average,\r\n            vote_count,\r\n            release_date,\r\n            overview,\r\n            adult\r\n        } = content;\r\n\r\n        const getGenresMoviesList = this.getGenresList(genre_ids);\r\n\r\n        return (\r\n            <div className=\"col-lg-3 col-md-6 col-12 movies-item\">\r\n                <div className=\"text-center\">\r\n                    <img\r\n                        src={generateMoviePoster(backdrop_path)}\r\n                        alt=\"camera-thumb\"\r\n                        className=\"img-thumbnail movie-thumb\"\r\n                    />\r\n                </div>\r\n                <h5 className=\"movie-title\">{title}</h5>\r\n                <div className=\"movie-info\">\r\n                    <p className=\"movie-info__genres\">\r\n                        {this.renderGenresList(getGenresMoviesList)}\r\n                    </p>\r\n                    <p className=\"movie-info__description\">\r\n                        {cutString(overview)}\r\n                    </p>\r\n                    <div className=\"movie-info__vote\">\r\n                        <p>Average rating: {vote_average}</p>\r\n                        <p>Votes count: {vote_count}</p>\r\n                    </div>\r\n                    <p className=\"movie-info__date\">{release_date}</p>\r\n                    <a className=\"btn btn-success\" href=\"#\">\r\n                        Link\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        genres: store.genres\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieItem);\r\n","import React, { Component } from \"react\";\r\nimport { MovieItem } from \"../MovieItem\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport \"./MoviesList.scss\";\r\n\r\nexport class MoviesList extends Component {\r\n    renderMoviesList(data) {\r\n        console.log(data);\r\n        if (data) {\r\n            return data.results.map(item => (\r\n                <MovieItem content={item} key={generateID()}></MovieItem>\r\n            ));\r\n        } else {\r\n            return <div>There are no movies...</div>;\r\n        }\r\n    }\r\n\r\n    renderTemplate() {\r\n        const { movies, isFetching } = this.props;\r\n\r\n        if (isFetching) {\r\n            return <p className=\"loading\">Loading...</p>;\r\n        } else {\r\n            return (\r\n                <div className=\"row movies-row\">\r\n                    {this.renderMoviesList(movies)}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"movies-wrap\">\r\n                <div className=\"container\">\r\n                    <div className=\"movies-wrap-header\">\r\n                        <h3 className=\"movies-wrap-title\">Movies</h3>\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <input\r\n                                className=\"form-control mr-sm-2\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    {this.renderTemplate()}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { generateID } from \"../../utils/constants\";\r\nimport \"./Header.scss\";\r\n\r\nexport class Header extends Component {\r\n    renderNavigationMenuList() {\r\n        const { routes } = this.props;\r\n\r\n        return routes.map(route => (\r\n            <li className=\"nav-item\" key={generateID()}>\r\n                <NavLink\r\n                    exact={route.isExact}\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-link\"\r\n                    to={route.path}\r\n                >\r\n                    {route.name}\r\n                </NavLink>\r\n            </li>\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        Movies app\r\n                    </a>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div\r\n                        className=\"collapse navbar-collapse\"\r\n                        id=\"navbarSupportedContent\"\r\n                    >\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {/* <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Home{\" \"}\r\n                                    <span className=\"sr-only\">(current)</span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Link\r\n                                </a>\r\n                            </li> */}\r\n\r\n                            {this.renderNavigationMenuList()}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n    routes: PropTypes.array\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./About.scss\";\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return <div>About page</div>;\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./MovieFullDescription.scss\";\r\n\r\nexport const MovieFullDescription = () => {\r\n    return <div>Movie description</div>;\r\n};\r\n\r\nexport default MovieFullDescription;\r\n","import { MoviesList } from \"../components/MoviesList\";\r\nimport { About } from \"../components/About\";\r\nimport { MovieFullDescription } from \"../components/MovieFullDescription\";\r\n\r\nexport const routes = [\r\n    {\r\n        isNavBar: true,\r\n        isExact: true,\r\n        path: \"/\",\r\n        name: \"Home\",\r\n        component: MoviesList\r\n    },\r\n    {\r\n        isNavBar: true,\r\n        path: \"/about\",\r\n        name: \"About\",\r\n        component: About\r\n    },\r\n    {\r\n        isNavBar: false,\r\n        path: \"/movie/:id\",\r\n        name: \"MovieItem\",\r\n        component: MovieFullDescription\r\n    }\r\n    // {\r\n    //     path: \"/login\",\r\n    //     name: \"Login\",\r\n    //     component: Login\r\n    // }\r\n    // {\r\n    //     isNavBar: true,\r\n    //     path: \"/profile\",\r\n    //     name: \"Profile\",\r\n    //     component: Profile,\r\n    //     isPrivate: true\r\n    // },\r\n];\r\n","import React from \"react\";\r\nimport \"./NotFound.scss\";\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"\"></div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { getPopularMovies } from \"../services/dataService\";\r\n\r\nexport const REQUEST = \"REQUEST\";\r\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\r\nexport const REQUEST_FAIL = \"REQUEST_FAIL\";\r\n\r\nexport const getMoviesAction = (page = 1) => dispatch => {\r\n    dispatch({\r\n        type: REQUEST\r\n    });\r\n\r\n    getPopularMovies(page)\r\n        .then(data => {\r\n            dispatch({\r\n                type: REQUEST_SUCCESS,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import { APIKey } from \"../utils/constants\";\r\nimport { lang } from \"../utils/constants\";\r\n\r\nexport const getPopularMovies = (page = 1) => {\r\n    const urlString = `https://api.themoviedb.org/3/movie/popular?api_key=${APIKey}&language=${lang}&page=${page}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const getSimilarMovies = (page = 1, movieId) => {\r\n    const urlString = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${APIKey}&language=${lang}&page=${page}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const searchMovies = (page = 1) => {\r\n    const urlString = `https://api.themoviedb.org/3/search/movie?api_key=${APIKey}&language=${lang}&page=${page}&include_adult=false`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nexport const getGenresList = () => {\r\n    const urlString = `https://api.themoviedb.org/3/genre/movie/list?api_key=${APIKey}&language=${lang}`;\r\n\r\n    return fetch(urlString)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n};\r\n","import { getGenresList } from \"../services/dataService\";\r\n\r\nexport const REQUEST1 = \"REQUEST1\";\r\nexport const REQUEST_SUCCESS1 = \"REQUEST_SUCCESS1\";\r\nexport const REQUEST_FAIL1 = \"REQUEST_FAIL1\";\r\n\r\nexport const getGenresAction = () => dispatch => {\r\n    dispatch({\r\n        type: REQUEST1\r\n    });\r\n\r\n    getGenresList()\r\n        .then(data => {\r\n            console.log(\"data\", data);\r\n            dispatch({\r\n                type: REQUEST_SUCCESS1,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL1,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MoviesList } from \"../MoviesList\";\r\nimport { Header } from \"../Header\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { routes } from \"../../utils/routes\";\r\nimport { About } from \"../About\";\r\nimport { MovieFullDescription } from \"../MovieFullDescription\";\r\nimport { NotFound } from \"../NotFound\";\r\nimport { getMoviesAction } from \"../../actions/getMovies\";\r\nimport { getGenresAction } from \"../../actions/getGenres\";\r\nimport \"./App.scss\";\r\n\r\nexport class App extends Component {\r\n    renderSwitchContent() {\r\n        return (\r\n            <Switch>\r\n                {routes.map(route => {\r\n                    const component = route.component;\r\n                    return (\r\n                        <Route\r\n                            key={route.path}\r\n                            exact={route.isExact}\r\n                            path={route.path}\r\n                            component={component}\r\n                        />\r\n                    );\r\n                })}\r\n            </Switch>\r\n        );\r\n    }\r\n    getGenresListAsync() {\r\n        const { getGenres } = this.props;\r\n\r\n        return new Promise(resolve => {\r\n            getGenres();\r\n            resolve(true);\r\n        }).catch(error => console.error(error));\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { getMovies } = this.props;\r\n\r\n        this.getGenresListAsync().then(getMovies());\r\n    }\r\n\r\n    render() {\r\n        const { movies, page } = this.props;\r\n\r\n        return (\r\n            <Router>\r\n                <React.Fragment>\r\n                    <Header\r\n                        routes={routes.filter(route => route.isNavBar)}\r\n                    ></Header>\r\n                    <main className=\"main\">\r\n                        <Switch>\r\n                            <Route\r\n                                key=\"/\"\r\n                                path=\"/\"\r\n                                render={() => (\r\n                                    <MoviesList\r\n                                        isFetching={movies.isFetching}\r\n                                        movies={movies.moviesData}\r\n                                        page={page}\r\n                                    />\r\n                                )}\r\n                                exact\r\n                            />\r\n                            />\r\n                            <Route\r\n                                key=\"/about\"\r\n                                path=\"/about\"\r\n                                component={About}\r\n                            />\r\n                            <Route\r\n                                key=\"/movie/:id\"\r\n                                path=\"/movie/:id\"\r\n                                component={MovieFullDescription}\r\n                            />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </main>\r\n                </React.Fragment>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    console.log(\"store\", store);\r\n    return {\r\n        page: store.page,\r\n        movies: store.movies,\r\n        genres: store.genres\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    console.log(dispatch);\r\n    return {\r\n        getGenres: () => dispatch(getGenresAction()),\r\n        getMovies: page => dispatch(getMoviesAction(page))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n","import { REQUEST, REQUEST_SUCCESS, REQUEST_FAIL } from \"../actions/getMovies\";\r\n\r\nexport const initialState = {\r\n    moviesData: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function moviesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                moviesData: action.payload\r\n            };\r\n        case REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                moviesData: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    REQUEST1,\r\n    REQUEST_SUCCESS1,\r\n    REQUEST_FAIL1\r\n} from \"../actions/getGenres\";\r\n\r\nexport const initialState = {\r\n    genresData: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function genresReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST1:\r\n            return { ...state, isFetching: true };\r\n        case REQUEST_SUCCESS1:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                genresData: action.payload\r\n            };\r\n        case REQUEST_FAIL1:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                genresData: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { moviesReducer } from \"./movies\";\r\nimport { genresReducer } from \"./genres\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    movies: moviesReducer,\r\n    genres: genresReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { App } from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/configureStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}